---

# The purpose of this Ansible playbook is to create and populate an Elasticsearch
# index with "normal" and "dga" domain, to use as a corpus for Machine Learning
#
# All this was inspired by a blog series from @Winterflower
# See: https://github.com/elastic/examples/tree/master/Machine%20Learning/DGA%20Detection
#

- hosts: all
  vars:
    # Big Thanks to "@baderj" for https://github.com/baderj/domain_generation_algorithms
    dga_gen_url: https://github.com/baderj/domain_generation_algorithms/archive/master.zip
    workdir: "{{ lookup('env', 'TMPDIR') }}/el-demo"
    el_cloud_info: "{{ el_cloud_id | regex_replace('^[^:]*:', '') | b64decode }}"
    corpus_index: "domain_corpus"
    day_range: [1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28] #Valid for all possible months
    month_range: [1,2,3,4,5,6,7,8,9,10,11,12]
    int_range: ['0','1','2','3','4','5','6','7','8','9']
    hex_range: ['0','1','2','3','4','5','6','7','8','9','a','b','c','d','e','f']
    ansible_connection: local
    ansible_python_interpreter: "{{ ansible_playbook_python }}"

  tasks:

  - name: Requires el_cloud_id and el_cloud_pw
    fail:
    when: not el_cloud_id or not el_cloud_pw
    tags:
    - always

  - name: Set variables
    set_fact:
      elasticsearch_url: "https://{{ el_cloud_info.split('$')[1] }}.{{ el_cloud_info.split('$')[0] }}"
      kibana_url: "https://{{ el_cloud_info.split('$')[2] }}.{{ el_cloud_info.split('$')[0] }}"
    tags:
    - always

  - name: "Check working dir: {{ workdir }}"
    file: path="{{ workdir }}" state=directory mode=0775
    tags:
    - always

  - name: Ingest Alexa Top 1M
    import_tasks: "tasks/ingest_top1m.yml"
    vars:
      top1m_url: http://s3.amazonaws.com/alexa-static/top-1m.csv.zip
      top1m_name: Alexa
    tags:
    - alexa

  - name: Ingest Umbrella Top 1M
    import_tasks: "tasks/ingest_top1m.yml"
    vars:
      top1m_url: http://s3-us-west-1.amazonaws.com/umbrella-static/top-1m.csv.zip
      top1m_name: Umbrella
    tags:
    - umbrella

  - name: Ingest DGAs
    import_tasks: "tasks/ingest_dga_domains.yml"
    tags:
    - dga
